// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VitaPharm.Data;

#nullable disable

namespace VitaPharm.Migrations
{
    [DbContext(typeof(PharmacyDbContext))]
<<<<<<<< HEAD:VitaPharm/Migrations/20250523162550_InitialCreate.Designer.cs
    [Migration("20250523162550_InitialCreate")]
========
    [Migration("20250523161924_InitialCreate")]
>>>>>>>> 3273a79e62a6e557228f494ddd8594dcf0854553:VitaPharm/Migrations/20250523161924_InitialCreate.Designer.cs
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VitaPharm.Data.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("VitaPharm.Data.Batch", b =>
                {
                    b.Property<int>("BatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchID"));

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BatchStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("MfgDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("money");

                    b.Property<int>("QtyAvailable")
                        .HasColumnType("int");

                    b.HasKey("BatchID");

                    b.HasIndex("CommodityID");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("VitaPharm.Data.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VitaPharm.Data.Commodity", b =>
                {
                    b.Property<int>("CommodityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommodityID"));

                    b.Property<string>("BaseUnit")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CategoriesCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CommodityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IsTerminated")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("money");

                    b.HasKey("CommodityID");

                    b.HasIndex("CategoriesCategoryID");

                    b.ToTable("Commodities");
                });

            modelBuilder.Entity("VitaPharm.Data.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VitaPharm.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("VitaPharm.Data.GoodsReceipt", b =>
                {
                    b.Property<int>("ReceiptID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceiptID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReceiptCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("ReceiptDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceiptStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ReceiptID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("GoodsReceipts");
                });

            modelBuilder.Entity("VitaPharm.Data.GoodsReceiptDetail", b =>
                {
                    b.Property<int>("GoodsReceiptDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoodsReceiptDetailID"));

                    b.Property<int>("BatchID")
                        .HasColumnType("int");

                    b.Property<int>("GoodsReceiptReceiptID")
                        .HasColumnType("int");

                    b.Property<int>("QtyIn")
                        .HasColumnType("int");

                    b.HasKey("GoodsReceiptDetailID");

                    b.HasIndex("BatchID");

                    b.HasIndex("GoodsReceiptReceiptID");

                    b.ToTable("GoodsReceiptDetails");
                });

            modelBuilder.Entity("VitaPharm.Data.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float>("TaxRate")
                        .HasColumnType("real");

                    b.HasKey("InvoiceID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("VitaPharm.Data.InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDetailID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<int>("CommodityID")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("InvoiceDetailID");

                    b.HasIndex("CommodityID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("VitaPharm.Data.Account", b =>
                {
                    b.HasOne("VitaPharm.Data.Employee", "Employee")
                        .WithMany("Account")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("VitaPharm.Data.Batch", b =>
                {
                    b.HasOne("VitaPharm.Data.Commodity", "Commodity")
                        .WithMany("Batch")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");
                });

            modelBuilder.Entity("VitaPharm.Data.Commodity", b =>
                {
                    b.HasOne("VitaPharm.Data.Categories", "Categories")
                        .WithMany("Commodity")
                        .HasForeignKey("CategoriesCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("VitaPharm.Data.GoodsReceipt", b =>
                {
                    b.HasOne("VitaPharm.Data.Employee", "Employee")
                        .WithMany("GoodsReceipt")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("VitaPharm.Data.GoodsReceiptDetail", b =>
                {
                    b.HasOne("VitaPharm.Data.Batch", "Batch")
                        .WithMany("GoodsReceiptDetail")
                        .HasForeignKey("BatchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VitaPharm.Data.GoodsReceipt", "GoodsReceipt")
                        .WithMany("GoodsReceiptDetail")
                        .HasForeignKey("GoodsReceiptReceiptID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("GoodsReceipt");
                });

            modelBuilder.Entity("VitaPharm.Data.Invoice", b =>
                {
                    b.HasOne("VitaPharm.Data.Customer", "Customer")
                        .WithMany("Invoice")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VitaPharm.Data.Employee", "Employee")
                        .WithMany("Invoice")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("VitaPharm.Data.InvoiceDetail", b =>
                {
                    b.HasOne("VitaPharm.Data.Commodity", "Commodity")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("CommodityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VitaPharm.Data.Invoice", "Invoice")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commodity");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("VitaPharm.Data.Batch", b =>
                {
                    b.Navigation("GoodsReceiptDetail");
                });

            modelBuilder.Entity("VitaPharm.Data.Categories", b =>
                {
                    b.Navigation("Commodity");
                });

            modelBuilder.Entity("VitaPharm.Data.Commodity", b =>
                {
                    b.Navigation("Batch");

                    b.Navigation("InvoiceDetail");
                });

            modelBuilder.Entity("VitaPharm.Data.Customer", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("VitaPharm.Data.Employee", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("GoodsReceipt");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("VitaPharm.Data.GoodsReceipt", b =>
                {
                    b.Navigation("GoodsReceiptDetail");
                });

            modelBuilder.Entity("VitaPharm.Data.Invoice", b =>
                {
                    b.Navigation("InvoiceDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
